{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Web Scrapping Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "google maps scrapper‚öíÔ∏è": {
      "ai_tool": [
        [
          {
            "node": "Web Scrapping Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Web Scrapping Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Email_validation": {
      "ai_tool": [
        [
          {
            "node": "Email Validationüìß",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Web Scrapping Agent": {
      "main": [
        [
          {
            "node": "Email Validationüìß",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model1": {
      "ai_languageModel": [
        []
      ]
    },
    "Mistral Cloud Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Web Scrapping Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Email Validationüìß",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-12-14T05:43:07.881Z",
  "id": "LK79iPvpM59QeOlo",
  "meta": null,
  "name": "Google Scrapper Agent V1üîú",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        20,
        -60
      ],
      "id": "b23b74c5-d0f1-494d-8869-c45622b9e929",
      "name": "When chat message received",
      "webhookId": "210a1fec-5253-4e52-9f5f-b719738ad1f2"
    },
    {
      "parameters": {
        "model": "mistral-medium",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        -340,
        400
      ],
      "id": "e82be7be-c204-4edc-abca-08c4c3a85f75",
      "name": "Mistral Cloud Chat Model",
      "credentials": {
        "mistralCloudApi": {
          "id": "ja490hUjKCOlSnOl",
          "name": "Mistral Cloud account‚úÖ"
        }
      }
    },
    {
      "parameters": {
        "name": "google_maps_scrapper",
        "description": "Call this tool to scrap google maps",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "PKrp15R9DMpqR1YZ",
          "cachedResultName": "Google Maps Scrapper Tool‚öíÔ∏è‚öíÔ∏è"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.3,
      "position": [
        480,
        220
      ],
      "id": "7f9b3b01-0ce9-481b-aae7-acda0427dd1d",
      "name": "google maps scrapper‚öíÔ∏è"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        320,
        240
      ],
      "id": "c17e43bf-622f-4e64-a096-5e47d989905a",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "model": "openai/gpt-4o-mini",
        "options": {
          "baseURL": "https://openrouter.ai/api/v1"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        160,
        240
      ],
      "id": "9a08a430-5f91-4e3f-92b2-390b5ed0d799",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "1JBBIaXSHGKDHZKq",
          "name": "Openrouter‚úÖ"
        }
      }
    },
    {
      "parameters": {
        "name": "Email_validation",
        "description": "Call this tool to validate all the emails we got",
        "workflowId": {
          "__rl": true,
          "value": "Acrft5XJrbMUJ5ky",
          "mode": "list",
          "cachedResultName": "Email Validation and Verification tool‚öíÔ∏è‚öíÔ∏è"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.3,
      "position": [
        880,
        240
      ],
      "id": "91c07e96-ac80-4449-9a07-27f7b1a11f45",
      "name": "Email_validation"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=You are a helpful assistant. Your task is to convert natural language into structured queries for a Google Maps web scraper and ensure outputs are formatted correctly for further processing.\n\nProcess:\n\nInterpret User Input:\n\nExtract the main keyword (e.g., \"hotels\") and area (e.g., \"Union Springs, Alabama\") from the user's chat message.\nIf no specific area is provided, default to 'USA' as the broader region.\nGenerate Sub-Area Queries:\n\nCreate a list of search queries for the provided keyword by including sub-areas (microneighborhoods) within the specified area.\nIf only a larger region (e.g., \"Alabama\") is mentioned, split it into smaller cities/towns and generate search queries for each.\nUse the format: [keyword]+in+[sub-area]. For example, hotels+in+Union+Springs+Alabama.\nFormat the Output for the Scraper:\n\nConvert each query into a JSON object with the following structure:\njson\nCopy code\n{\n    \"query\": \"hotels+in+Union+Springs+Alabama\"\n}\nSend Queries:\n\nSubmit the JSON query objects one at a time to the 1Google Maps Scraper tool.\nUpload Results:\n\nFormat the scraper's output into a well-organized Google Sheet, with clearly labeled columns such as Business Name, Address, Email, Phone Number, and Relevance.\nEnsure the data is neat, deduplicated, and ready for lead generation efforts.\nExpected Output Example:\nFor the keyword hotels and area Alabama, generate sub-area queries like:\n\nhotels+in+Union+Springs+Alabama\nhotels+in+Montgomery+Alabama\nhotels+in+Tuscaloosa+Alabama\nEach query should be formatted as:\n\njson\nCopy code\n{\n    \"query\": \"hotels+in+Union+Springs+Alabama\"\n}\n\n\n\nFor all te results, we are going to pass them via the `Email_validation` tool before returning the responses back to the user. This is a must. Email validation and verification\nAdditional Notes:\n\nUse natural language interpretation to handle variations in user input.\nEnsure the sub-area queries are comprehensive enough to cover the specified region.\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        280,
        -60
      ],
      "id": "1043327c-bbf6-4614-b14a-3afe00f20753",
      "name": "Web Scrapping Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        680,
        400
      ],
      "id": "d977ba48-000d-448c-a7bf-f5940885fe05",
      "name": "Mistral Cloud Chat Model1",
      "credentials": {
        "mistralCloudApi": {
          "id": "ja490hUjKCOlSnOl",
          "name": "Mistral Cloud account‚úÖ"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Analyse this and run to the tool only once with all the data\n\n\n{{ $json.output || $json.text }}\n\n\n",
        "options": {
          "systemMessage": "You are a helpful assistant. Yoiur task is to perform an eamil validation for all the given emails. You are to send all these as a a single email array to the email validation tool eg \n\nOnce verified, try to match themail to the company and website as provided in the query and present these to the user in a clean format\n\n{\n  \"query\": [\n    \"example1@gmail.com\",\n    \"contact@businesssite.com\",\n    \"info@anotherdomain.org\",\n    \"support@websitename.net\",\n    \"hello@companymail.co\"\n  ]\n}\n\n\nMake sure this runs ONLY ONCE with all the items"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        720,
        -60
      ],
      "id": "2b191ba1-cc95-411e-99d7-591049d9dd13",
      "name": "Email Validationüìß"
    },
    {
      "parameters": {
        "model": "mistral-large-latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        -60,
        160
      ],
      "id": "5e51cbe8-f3a7-47d6-8dd3-0b917042039a",
      "name": "Mistral Cloud Chat Model2",
      "credentials": {
        "mistralCloudApi": {
          "id": "ja490hUjKCOlSnOl",
          "name": "Mistral Cloud account‚úÖ"
        }
      }
    },
    {
      "parameters": {
        "model": "mistral-large-latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        680,
        180
      ],
      "id": "063c43a0-6114-4d8c-a2a0-3ce1a4aa4dd6",
      "name": "Mistral Cloud Chat Model3",
      "credentials": {
        "mistralCloudApi": {
          "id": "ja490hUjKCOlSnOl",
          "name": "Mistral Cloud account‚úÖ"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "errorWorkflow": "2gLR5bciIZCpJZRE"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-12-04T04:44:12.047Z",
      "updatedAt": "2024-12-04T04:44:12.047Z",
      "id": "4gEIbJK2mKfhDcCF",
      "name": "Scrapping"
    },
    {
      "createdAt": "2024-12-04T04:44:18.895Z",
      "updatedAt": "2024-12-04T04:44:18.895Z",
      "id": "IjGuaaR7WQP75dhw",
      "name": "Lead Generation"
    },
    {
      "createdAt": "2024-12-14T05:16:52.018Z",
      "updatedAt": "2024-12-14T05:16:52.018Z",
      "id": "kOC8RBaSMppaZ55G",
      "name": "Template"
    },
    {
      "createdAt": "2024-12-03T14:36:18.275Z",
      "updatedAt": "2024-12-03T14:36:18.275Z",
      "id": "koKAFcp5uch8EPTB",
      "name": "Public"
    },
    {
      "createdAt": "2024-12-03T14:40:24.017Z",
      "updatedAt": "2024-12-03T14:40:24.017Z",
      "id": "ufRhFqhr9vLO0YC1",
      "name": "AI"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-12-23T05:05:11.672Z",
  "versionId": "37c26ea5-ed34-488d-8f92-6d0476f33850"
}