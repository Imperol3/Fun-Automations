{
  "active": false,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 4 hours": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-27T10:12:03.291Z",
  "id": "57NpNqh8IWfU4VOC",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Workflow backup",
  "nodes": [
    {
      "parameters": {},
      "id": "902b5dcd-51c2-4724-bbf3-5a71f5c5ef58",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -480,
        500
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "Imperol3",
          "mode": "list"
        },
        "repository": {
          "__rl": true,
          "value": "Fun-Automations",
          "mode": "name"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "3fc42b95-2552-4769-b41b-9ae2e6ec744a",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        840,
        580
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "eDpQXwboPqqjamP1",
          "name": "GitHub accountâœ…"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "09a67dce-9c78-419d-ab0f-eca60c039227",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        1700,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "445b40dc-8356-40f0-8663-6253849bc95e",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1940,
        520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "fbae85a8-0e2d-4428-9a2b-5999056ee2bd",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1940,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "15573bf5-d0fc-4f3f-b5a0-0d9525e0b808",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1940,
        940
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "898f5150-fd4a-4109-903a-c4f5835d1844",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        640,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "Imperol3"
            },
            {
              "name": "repo.name",
              "value": "={{ $json.repo }}"
            },
            {
              "name": "repo.path",
              "value": "={{ $json.folder }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d4dde100-c421-464b-9900-fe76bb6dcc5d",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -40,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
        "height": 464.79920462713443,
        "width": 389.78906250000017
      },
      "id": "31a4b588-ebd5-4ec6-b920-18af2683e0aa",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1840,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "54aff0f9-c963-4c24-9b29-6c47891003c2",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        540,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "19f16ede-5769-4fe8-8812-3d2bea0e9af2",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1620,
        420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "60200560-acd3-4ad8-8b99-4569bbc7ca0c",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        420,
        740
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "n8nApi": {
          "id": "qMPcwXYtxelKJQhF",
          "name": "n8n accountâœ…"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "16e3094f-3eb5-42aa-a344-62aa00ba773a",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        1240,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "f77a6f67-98b3-4e2c-a857-8bcc9959e8ec",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1060,
        720
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "73cf8c37-d669-45d4-ae0d-958b08517370",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d3f3cd70-cef1-46a9-b277-cb7d78a87801",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        1460,
        720
      ],
      "disabled": true
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": {
          "__rl": true,
          "value": "={{ $('Loop Over Items').item.json.repo.name }}",
          "mode": ""
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{ $now.format('yyyy-MM-dd') }} - {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "3a58c6a4-5c70-4089-b9f8-6077fd60ddf9",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        2120,
        720
      ],
      "typeVersion": 1,
      "retryOnFail": true,
      "credentials": {
        "githubApi": {
          "id": "eDpQXwboPqqjamP1",
          "name": "GitHub accountâœ…"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": {
          "__rl": true,
          "value": "={{ $('Loop Over Items').item.json.repo.name }}",
          "mode": ""
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{ $now.format('yyyy-MM-dd') }} -  {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "bd53b68f-a523-438e-a05a-13a0ecab5b4c",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        2140,
        940
      ],
      "typeVersion": 1,
      "retryOnFail": true,
      "credentials": {
        "githubApi": {
          "id": "eDpQXwboPqqjamP1",
          "name": "GitHub accountâœ…"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 6
            }
          ]
        }
      },
      "id": "f86a2b7d-043a-4d7b-a595-d7c8976a7f09",
      "name": "Every 4 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -620,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        180,
        720
      ],
      "id": "0f3f8b35-b2d0-4fc8-85af-13b414da314e",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -280,
        500
      ],
      "id": "e4e57389-4922-47d7-8d95-99c1522b1907",
      "name": "Limit"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dbd7a291-d043-494b-a469-8a4a041788ce",
              "name": "data",
              "value": "=[\n  {\n    \"repo\": \"n8n-repo\",\n    \"folder\": \"Funatomations/Public/\"\n  },\n  {\n    \"repo\": \"Fun-Automations\",\n    \"folder\": \"Public-Workflows/\"\n  }\n]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -440,
        720
      ],
      "id": "bc12a0ad-71ae-486e-a03a-ec0503c2f540",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -260,
        720
      ],
      "id": "bbf5a5fd-3b38-4f47-b308-c46318dcc228",
      "name": "Split Out"
    }
  ],
  "pinData": {
    "On clicking 'execute'": [
      {
        "json": {
          "repo": "n8n-repo",
          "folder": "Funatomations/Public/"
        }
      },
      {
        "json": {
          "repo": "Fun-Automations",
          "folder": "Public-Workflows/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "errorWorkflow": "2gLR5bciIZCpJZRE"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-12-03T14:00:44.893Z",
      "updatedAt": "2024-12-03T14:00:44.893Z",
      "id": "iZyWrTGa3ccxB0XH",
      "name": "N8N manager"
    },
    {
      "createdAt": "2024-12-03T14:36:18.275Z",
      "updatedAt": "2024-12-03T14:36:18.275Z",
      "id": "koKAFcp5uch8EPTB",
      "name": "Public"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-01-29T12:33:29.530Z",
  "versionId": "d5967ac4-d0e5-4834-b71e-270f3ebdddc9"
}