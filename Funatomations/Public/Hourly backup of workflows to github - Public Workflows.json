{
  "active": true,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 4 hours": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-12-03T14:35:48.810Z",
  "id": "p6ggA16JsFk4VC7M",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Hourly backup of workflows to github - Public Workflows",
  "nodes": [
    {
      "parameters": {},
      "id": "4f77737b-33c3-4a1e-a307-1d98e4527f12",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -620,
        520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "Imperol3",
          "mode": "list"
        },
        "repository": {
          "__rl": true,
          "value": "Fun-Automations",
          "mode": "name"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "de02971f-0d66-4bca-81bb-ba9c27e5d1d5",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        840,
        580
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "eDpQXwboPqqjamP1",
          "name": "GitHub accountâœ…"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "ca8c84bf-8986-4b3b-9c45-2809525d4916",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        1700,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "7287c645-06b7-43bf-876c-01840241351c",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1940,
        520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "9802241c-ca93-4865-b029-3c392760e1da",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1940,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "c841eaf7-d8a4-4139-91a6-39ae30f47702",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1940,
        940
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "d5f86599-f148-423b-ae47-3f8a0a3684dd",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        640,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "Imperol3"
            },
            {
              "name": "repo.name",
              "value": "={{ $json.repo }}"
            },
            {
              "name": "repo.path",
              "value": "={{ $json.folder }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b835f82e-dd68-481a-9179-a43e59e23750",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -40,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
        "height": 464.79920462713443,
        "width": 389.78906250000017
      },
      "id": "328f77e5-f11d-4d86-a565-81ad045d6d89",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1840,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "d2dafca7-8e79-4a72-965a-0779ec77b9c3",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        540,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "19680aea-a0bb-40b2-88f3-41e9116480fd",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1620,
        420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "returnAll": false,
        "limit": 10,
        "filters": {
          "tags": "Public"
        },
        "requestOptions": {}
      },
      "id": "7b9ae960-212b-40f1-9f02-ed98bd7a91e4",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        420,
        740
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "n8nApi": {
          "id": "qMPcwXYtxelKJQhF",
          "name": "n8n accountâœ…"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "bcb93e88-2d45-4140-aa0d-ad4cb65dd9b5",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        1240,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "d23dcf9e-c0bb-46fb-83be-cbcb0a9ca0de",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1060,
        720
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "73cf8c37-d669-45d4-ae0d-958b08517370",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ad8d84a0-dead-4766-ac13-e46d5e5903c9",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        1460,
        720
      ],
      "disabled": true
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": {
          "__rl": true,
          "value": "={{ $('Loop Over Items').item.json.repo.name }}",
          "mode": ""
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{ $now.format('yyyy-MM-dd') }} - {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "c9e2f924-7b51-476a-8e7c-aee032310a8d",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        2120,
        720
      ],
      "typeVersion": 1,
      "retryOnFail": true,
      "credentials": {
        "githubApi": {
          "id": "eDpQXwboPqqjamP1",
          "name": "GitHub accountâœ…"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": {
          "__rl": true,
          "value": "={{ $('Loop Over Items').item.json.repo.name }}",
          "mode": ""
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{ $now.format('yyyy-MM-dd') }} -  {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "1d9f6aaa-e519-4403-84ab-61fb8bac398c",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        2140,
        940
      ],
      "typeVersion": 1,
      "retryOnFail": true,
      "credentials": {
        "githubApi": {
          "id": "eDpQXwboPqqjamP1",
          "name": "GitHub accountâœ…"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 6
            }
          ]
        }
      },
      "id": "cef34d0a-3fcb-44f0-bfc9-db6f07954940",
      "name": "Every 4 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -620,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        180,
        720
      ],
      "id": "7bdb38cd-a6ed-46a6-a105-5e62a06eceab",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -280,
        500
      ],
      "id": "368ea42c-5405-42de-9941-aba1944d987f",
      "name": "Limit"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dbd7a291-d043-494b-a469-8a4a041788ce",
              "name": "data",
              "value": "=[\n  {\n    \"repo\": \"n8n-repo\",\n    \"folder\": \"Funatomations/Public/\"\n  },\n  {\n    \"repo\": \"Fun-Automations\",\n    \"folder\": \"Public-Workflows/\"\n  }\n]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -440,
        720
      ],
      "id": "3d57e97f-9165-4cd8-89d4-e39768a85863",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -260,
        720
      ],
      "id": "4f095b33-d180-4de1-8bc0-60d97267ec45",
      "name": "Split Out"
    }
  ],
  "pinData": {
    "On clicking 'execute'": [
      {
        "json": {
          "repo": "n8n-repo",
          "folder": "Funatomations/Public/"
        }
      },
      {
        "json": {
          "repo": "Fun-Automations",
          "folder": "Public-Workflows/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "errorWorkflow": "2gLR5bciIZCpJZRE"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-12-03T14:00:44.893Z",
      "updatedAt": "2024-12-03T14:00:44.893Z",
      "id": "iZyWrTGa3ccxB0XH",
      "name": "N8N manager"
    },
    {
      "createdAt": "2024-12-03T14:36:18.275Z",
      "updatedAt": "2024-12-03T14:36:18.275Z",
      "id": "koKAFcp5uch8EPTB",
      "name": "Public"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-12-20T05:12:16.188Z",
  "versionId": "74e6cde3-cc36-482c-b7cf-2c40b1f7d424"
}